dotnet build -nologo .
pulumi up
pulumi destroy

curl $(pulumi stack output BucketEndpoint)

# Pulumi - Modern Infrastructure as Code
#
# To begin working with Pulumi, run the `pulumi new` command:
#
#     $ pulumi new
#
# This will prompt you to create a new project for your cloud and language of choice.
#
# The most common commands from there are:
#
#     - pulumi up       : Deploy code and/or resource changes
#     - pulumi stack    : Manage instances of your project
#     - pulumi config   : Alter your stack's configuration or secrets
#     - pulumi destroy  : Tear down your stack's resources entirely
#
# For more information, please visit the project page: https://www.pulumi.com/docs/
#
# Usage:
#   pulumi [command]
#
# Available Commands:
#   cancel         Cancel a stack's currently running update, if any
#   config         Manage configuration
#   destroy        Destroy an existing stack and its resources
#   help           Help about any command
#   login          Log in to the Pulumi service
#   logout         Log out of the Pulumi service
#   logs           [PREVIEW] Show aggregated logs for a stack
#   new            Create a new Pulumi project
#   plugin         Manage language and resource provider plugins
#   policy         Manage resource policies
#   preview        Show a preview of updates to a stack's resources
#   refresh        Refresh the resources in a stack
#   stack          Manage stacks
#   state          Edit the current stack's state
#   up             Create or update the resources in a stack
#   version        Print Pulumi's version number
#   watch          [PREVIEW] Continuously update the resources in a stack
#   whoami         Display the current logged-in user
#
# Flags:
#       --color string                 Colorize output. Choices are: always, never, raw, auto (default "auto")
#   -C, --cwd string                   Run pulumi as if it had been started in another directory
#       --disable-integrity-checking   Disable integrity checking of checkpoint files
#   -e, --emoji                        Enable emojis in the output
#   -h, --help                         help for pulumi
#       --logflow                      Flow log settings to child processes (like plugins)
#       --logtostderr                  Log to stderr instead of to files
#       --non-interactive              Disable interactive mode for all commands
#       --profiling string             Emit CPU and memory profiles and an execution trace to '[filename].[pid].{cpu,mem,trace}', respectively
#       --tracing file:                Emit tracing to the specified endpoint. Use the file: scheme to write tracing data to a local file
#   -v, --verbose int                  Enable verbose logging (e.g., v=3); anything >3 is very verbose
#
# Use "pulumi [command] --help" for more information about a command.
